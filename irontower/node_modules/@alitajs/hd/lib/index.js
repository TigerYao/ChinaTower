"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _path() {
  const data = require("path");

  _path = function _path() {
    return data;
  };

  return data;
}

function _postcssPluginPx2rem() {
  const data = _interopRequireDefault(require("postcss-plugin-px2rem"));

  _postcssPluginPx2rem = function _postcssPluginPx2rem() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = api => {
  const getFile = api.utils.getFile;
  api.describe({
    key: 'hd',
    config: {
      schema(joi) {
        return joi.object();
      }

    }
  });

  if (api.userConfig.hd || api.userConfig.appType !== 'pc') {
    api.modifyDefaultConfig(config => {
      var _api$userConfig;

      const draftConfig = config;

      const _ref = ((_api$userConfig = api.userConfig) === null || _api$userConfig === void 0 ? void 0 : _api$userConfig.hd) || {},
            theme = _ref.theme,
            configPx2rem = _ref.px2rem;

      draftConfig.theme = _objectSpread({}, draftConfig.theme || {}, {
        '@hd': '2px'
      }, theme || {});
      draftConfig.extraPostCSSPlugins = [...(draftConfig.extraPostCSSPlugins || []), (0, _postcssPluginPx2rem().default)(_objectSpread({
        rootValue: 100,
        minPixelValue: 2
      }, configPx2rem || {}))];
      return draftConfig;
    });
    api.addEntryImports(() => {
      // src/hd.(tsx|ts|jsx|js)
      const hdFile = getFile({
        base: api.paths.absSrcPath || '',
        type: 'javascript',
        fileNameWithoutExt: 'hd'
      });
      return {
        source: hdFile ? require.resolve(hdFile.path) : require.resolve((0, _path().join)(__dirname, 'template.js'))
      };
    });
  }
};

exports.default = _default;