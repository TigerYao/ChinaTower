'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

require('antd-mobile/es/pull-to-refresh/style');
var _PullToRefresh = _interopDefault(require('antd-mobile/es/pull-to-refresh'));
require('antd-mobile/es/list-view/style');
var _ListView = _interopDefault(require('antd-mobile/es/list-view'));
var React = require('react');
var React__default = _interopDefault(React);
var hooks = require('@umijs/hooks');

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

var ONE_REM = parseInt(document.documentElement.style.fontSize, 10) || 100;
var SCALE = ONE_REM / 100;
/**
 * 像素转换
 * @param {Number} px - 750视觉稿像素
 * @return {Number} 屏幕上实际像素
 */

function px2hd(px) {
  return Number((px * SCALE).toFixed(1));
}
var defaultAlias = {
  data: 'data',
  pageSize: 'pageSize',
  offset: 'offset',
  total: 'total',
  page: 'page'
};

var LoadMoreListView = function LoadMoreListView(_ref) {
  var height = _ref.height,
      requestFunc = _ref.requestFunc,
      _ref$requestParams = _ref.requestParams,
      requestParams = _ref$requestParams === void 0 ? {} : _ref$requestParams,
      _ref$alias = _ref.alias,
      alias = _ref$alias === void 0 ? {} : _ref$alias,
      _renderFooter = _ref.renderFooter,
      _ref$container = _ref.container,
      container = _ref$container === void 0 ? '' : _ref$container,
      noData = _ref.noData,
      _ref$isTabsPage = _ref.isTabsPage,
      isTabsPage = _ref$isTabsPage === void 0 ? false : _ref$isTabsPage,
      otherProps = _objectWithoutProperties(_ref, ["height", "requestFunc", "requestParams", "alias", "renderFooter", "container", "noData", "isTabsPage"]);

  // const [preRequestParams, setPreRequestParams] = useState(requestParams);
  var trueAlias = _objectSpread2({}, defaultAlias, {}, alias);

  var asyncFn = function asyncFn(abc) {
    return new Promise(function (resolve) {
      var pageSize = abc.pageSize,
          offset = abc.offset,
          page = abc.page;
      var reqParams = requestParams;

      if (reqParams.pageSize || alias.pageSize) {
        reqParams[trueAlias.pageSize] = pageSize;
      }

      if (reqParams.offset || alias.offset) {
        reqParams[trueAlias.offset] = offset;
      }

      if (reqParams.page || alias.page) {
        reqParams[trueAlias.page] = page;
      }

      requestFunc(reqParams).then(function (res) {
        resolve({
          total: res[trueAlias.total],
          data: res[trueAlias.data]
        });
      });
    });
  };

  var containerRef = React.useRef(null);

  var _useState = React.useState(document.documentElement.clientHeight),
      _useState2 = _slicedToArray(_useState, 2),
      viewHeight = _useState2[0],
      setViewHeight = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      isInit = _useState4[0],
      setIsInit = _useState4[1];

  var _useState5 = React.useState(new _ListView.DataSource({
    rowHasChanged: function rowHasChanged(row1, row2) {
      return row1 !== row2;
    }
  })),
      _useState6 = _slicedToArray(_useState5, 1),
      dataSet = _useState6[0];

  React.useEffect(function () {
    var offsetTop = containerRef.current.getBoundingClientRect().top;
    setViewHeight(viewHeight - offsetTop - px2hd(isTabsPage ? 100 : 0));
    setIsInit(true);
  }, []);

  var _useLoadMore = hooks.useLoadMore(asyncFn, [container], {
    ref: containerRef,
    initPageSize: requestParams[trueAlias.pageSize],
    incrementSize: 10
  }),
      data = _useLoadMore.data,
      loading = _useLoadMore.loading,
      loadingMore = _useLoadMore.loadingMore,
      reload = _useLoadMore.reload,
      loadMore = _useLoadMore.loadMore,
      noMore = _useLoadMore.noMore;

  var touchLoadMore = function touchLoadMore() {
    if (!noMore) loadMore();
  };

  return React__default.createElement("div", null, data.length === 0 && !loading && noData && React__default.createElement("div", {
    onClick: function onClick() {
      reload();
    }
  }, noData), React__default.createElement("div", {
    style: {
      display: data.length || loading || !noData ? 'block' : 'none'
    },
    ref: containerRef
  }, isInit && React__default.createElement(_ListView, _extends({
    dataSource: dataSet.cloneWithRows(data),
    renderFooter: function renderFooter() {
      if (_renderFooter) {
        return _renderFooter(noMore, loadingMore, loadMore);
      }

      if (noMore) {
        return React__default.createElement("div", {
          style: {
            padding: 30,
            textAlign: 'center'
          },
          onClick: touchLoadMore
        }, "\u5DF2\u5168\u90E8\u52A0\u8F7D");
      }

      return React__default.createElement("div", {
        style: {
          display: !loading ? 'block' : 'none',
          padding: 30,
          textAlign: 'center'
        },
        onClick: touchLoadMore
      }, loadingMore ? '加载中...' : '加载完成');
    },
    style: {
      height: height || viewHeight,
      overflow: 'auto'
    },
    pageSize: 10,
    onEndReached: loadMore,
    pullToRefresh: React__default.createElement(_PullToRefresh, {
      refreshing: loading,
      onRefresh: reload,
      damping: 300,
      distanceToRefresh: 50
    }),
    onEndReachedThreshold: 100
  }, otherProps))));
};

module.exports = LoadMoreListView;
