"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd-mobile/es/textarea-item/style");

var _textareaItem = _interopRequireDefault(require("antd-mobile/es/textarea-item"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Field = _interopRequireDefault(require("../Field"));

require("../../styles/index.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var NomarTextArea = function NomarTextArea(props) {
  var coverStyle = props.coverStyle,
      _props$required = props.required,
      required = _props$required === void 0 ? false : _props$required,
      fieldProps = props.fieldProps,
      rules = props.rules,
      _props$rows = props.rows,
      rows = _props$rows === void 0 ? 3 : _props$rows,
      title = props.title,
      _props$positionType = props.positionType,
      positionType = _props$positionType === void 0 ? 'vertical' : _props$positionType,
      _props$hasStar = props.hasStar,
      hasStar = _props$hasStar === void 0 ? true : _props$hasStar,
      _props$extra = props.extra,
      extra = _props$extra === void 0 ? '' : _props$extra,
      subTitle = props.subTitle,
      _props$hidden = props.hidden,
      hidden = _props$hidden === void 0 ? false : _props$hidden,
      onBlur = props.onBlur,
      otherProps = _objectWithoutProperties(props, ["coverStyle", "required", "fieldProps", "rules", "rows", "title", "positionType", "hasStar", "extra", "subTitle", "hidden", "onBlur"]);

  var isVertical = positionType === 'vertical';
  if (extra) isVertical = true;

  var titleDiv = function titleDiv() {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, required && hasStar && /*#__PURE__*/_react.default.createElement("span", {
      className: "alitajs-dform-redStar"
    }, "*"), /*#__PURE__*/_react.default.createElement("span", {
      id: fieldProps,
      className: "alitajs-dform-title"
    }, title));
  };

  var inputOnBlur = function inputOnBlur(val) {
    window.scrollTo(0, 0);
    if (onBlur) onBlur(val);
  };

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, !hidden && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "alitajs-dform-area-title"
  }, isVertical && /*#__PURE__*/_react.default.createElement("div", {
    className: "alitajs-dform-vertical-title"
  }, required && hasStar && /*#__PURE__*/_react.default.createElement("span", {
    className: "alitajs-dform-redStar"
  }, "*"), /*#__PURE__*/_react.default.createElement("span", {
    id: fieldProps,
    className: "alitajs-dform-title"
  }, title), subTitle), extra !== '' && /*#__PURE__*/_react.default.createElement("div", {
    className: "alitajs-dform-area-extra"
  }, extra)), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)({
      'alitajs-dform-vertical-area': isVertical,
      'alitajs-dform-area': true
    })
  }, /*#__PURE__*/_react.default.createElement(_Field.default, {
    name: fieldProps,
    rules: rules || [{
      required: required,
      message: "\u8BF7\u8F93\u5165".concat(title)
    }]
  }, /*#__PURE__*/_react.default.createElement(_textareaItem.default, _extends({}, otherProps, {
    title: titleDiv(),
    style: coverStyle,
    rows: rows,
    onBlur: function onBlur(val) {
      inputOnBlur(val);
    }
  }))))));
};

var _default = NomarTextArea;
exports.default = _default;