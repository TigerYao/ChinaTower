"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd-mobile/es/button/style");

var _button = _interopRequireDefault(require("antd-mobile/es/button"));

require("antd-mobile/es/white-space/style");

var _whiteSpace = _interopRequireDefault(require("antd-mobile/es/white-space"));

var _react = _interopRequireDefault(require("react"));

var _dform = _interopRequireWildcard(require("@alitajs/dform"));

var _photo = _interopRequireDefault(require("../../../assets/photo.png"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Page = function Page() {
  var _useForm = (0, _dform.useForm)(),
      _useForm2 = _slicedToArray(_useForm, 1),
      form = _useForm2[0];

  var onFinish = function onFinish(values) {
    // eslint-disable-next-line no-console
    console.log('Success:', values);
  };

  var onFinishFailed = function onFinishFailed(errorInfo) {
    // eslint-disable-next-line no-console
    console.log('Failed:', errorInfo);
  };

  var photoImg = function photoImg() {
    return /*#__PURE__*/_react.default.createElement("img", {
      src: _photo.default,
      style: {
        width: '3rem',
        height: '2rem'
      }
    });
  };

  var formsData = [{
    type: 'area',
    fieldProps: 'textArea1',
    required: true,
    placeholder: '请输入...',
    title: '公司简介',
    positionType: 'horizontal'
  }, {
    type: 'area',
    fieldProps: 'textArea2',
    title: '有标题',
    placeholder: '只读，不可编辑',
    rows: 3,
    editable: false
  }, {
    type: 'area',
    fieldProps: 'titleTooLong',
    title: '标题文字内容过长',
    placeholder: '请输入',
    labelNumber: 8,
    required: true,
    coverStyle: {
      border: '1px solid #108ee9',
      background: '#fff'
    }
  }, {
    type: 'area',
    fieldProps: 'Remarks',
    title: '备注',
    placeholder: '请输入',
    required: true
  }, {
    type: 'area',
    fieldProps: 'idenPhone',
    title: '身份证',
    extra: photoImg(),
    placeholder: '存在 extra 自动换行',
    required: true
  }];
  var formsValues = {};
  var formProps = {
    onFinish: onFinish,
    onFinishFailed: onFinishFailed,
    data: formsData,
    formsValues: formsValues,
    form: form,
    isDev: true
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_dform.default, formProps), /*#__PURE__*/_react.default.createElement(_whiteSpace.default, {
    size: "sm"
  }), /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "primary",
    onClick: function onClick() {
      return form.submit();
    }
  }, "Submit"));
};

var _default = Page;
exports.default = _default;