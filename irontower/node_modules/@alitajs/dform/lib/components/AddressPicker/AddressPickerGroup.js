"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd-mobile/es/modal/style");

var _modal = _interopRequireDefault(require("antd-mobile/es/modal"));

require("antd-mobile/es/flex/style");

var _flex = _interopRequireDefault(require("antd-mobile/es/flex"));

require("antd-mobile/es/list/style");

var _list = _interopRequireDefault(require("antd-mobile/es/list"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = require("../../utils");

var _ = require("..");

require("../../styles/index.less");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Item = _list.default.Item;

var AddressPickerGroup = function AddressPickerGroup(props) {
  var _props$data = props.data,
      data = _props$data === void 0 ? [] : _props$data,
      _props$placeholder = props.placeholder,
      placeholder = _props$placeholder === void 0 ? '请选择' : _props$placeholder,
      _props$positionType = props.positionType,
      positionType = _props$positionType === void 0 ? 'horizontal' : _props$positionType,
      title = props.title,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      onChangeLevel = props.onChangeLevel,
      onChange = props.onChange,
      _props$level = props.level,
      level = _props$level === void 0 ? 3 : _props$level,
      _props$placeholderLis = props.placeholderList,
      placeholderList = _props$placeholderLis === void 0 ? [] : _props$placeholderLis,
      _props$initValue = props.initValue,
      initValue = _props$initValue === void 0 ? {} : _props$initValue,
      _props$required = props.required,
      required = _props$required === void 0 ? false : _props$required,
      _props$hasStar = props.hasStar,
      hasStar = _props$hasStar === void 0 ? true : _props$hasStar,
      fieldProps = props.fieldProps,
      _props$labelNumber = props.labelNumber,
      labelNumber = _props$labelNumber === void 0 ? 5 : _props$labelNumber,
      coverStyle = props.coverStyle,
      _onClick = props.onClick; // input 框的值

  var _useState = (0, _react.useState)(''),
      _useState2 = _slicedToArray(_useState, 2),
      inputLabel = _useState2[0],
      setInputLabel = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      modalFlag = _useState4[0],
      setModalFlag = _useState4[1];

  var _useState5 = (0, _react.useState)(true),
      _useState6 = _slicedToArray(_useState5, 2),
      changeFlag = _useState6[0],
      setChangeFlag = _useState6[1]; // 弹框选中的头部文字列表


  var _useState7 = (0, _react.useState)(placeholderList && placeholderList.length ? [placeholderList[0]] : ['请选择']),
      _useState8 = _slicedToArray(_useState7, 2),
      labelList = _useState8[0],
      setLabelList = _useState8[1]; // value 值列表


  var _useState9 = (0, _react.useState)([]),
      _useState10 = _slicedToArray(_useState9, 2),
      valueList = _useState10[0],
      setValueList = _useState10[1]; // 当前列表数据


  var _useState11 = (0, _react.useState)([]),
      _useState12 = _slicedToArray(_useState11, 2),
      dataList = _useState12[0],
      setDataList = _useState12[1]; // 当前所在层级数字


  var _useState13 = (0, _react.useState)(0),
      _useState14 = _slicedToArray(_useState13, 2),
      nowLevel = _useState14[0],
      setNowLevel = _useState14[1];

  var isVertical = positionType === 'vertical';
  (0, _react.useEffect)(function () {
    if (onChange) onChange({
      label: [],
      value: []
    });
  }, []);
  (0, _react.useEffect)(function () {
    if (data.length === 0) return;
    setDataList(data.map(function (item) {
      var newItem = item;

      if (newItem.value === valueList[valueList.length - 1]) {
        newItem.flag = true;
      } else newItem.flag = false;

      return newItem;
    }));
  }, [data]);
  (0, _react.useEffect)(function () {
    if (initValue && Object.keys(initValue).length && changeFlag) {
      var _initValue$label = initValue.label,
          label = _initValue$label === void 0 ? [] : _initValue$label,
          _initValue$value = initValue.value,
          value = _initValue$value === void 0 ? [] : _initValue$value;
      setDataList(data.map(function (item) {
        var newItem = item;

        if (newItem.value === value[value.length]) {
          newItem.flag = true;
        } else newItem.flag = false;

        return newItem;
      }));
      var newLabelList = (0, _utils.resetLabel)(JSON.parse(JSON.stringify(_toConsumableArray(label))), placeholderList);
      setLabelList(newLabelList);
      setNowLevel(value.length);
      if (onChangeLevel) onChangeLevel(value);
      setInputLabel(label.join(','));
      setValueList(value);
      setChangeFlag(false);
    }
  }, [initValue]);

  var openMoal = function openMoal() {
    if (disabled) return;
    setModalFlag(true);
  };

  var onCancel = function onCancel() {
    setModalFlag(false);
  };

  var onConfirm = function onConfirm() {
    var newLabelList = JSON.parse(JSON.stringify(labelList));
    if (nowLevel !== level) newLabelList.pop();
    setInputLabel(newLabelList.join(','));
    if (onChange) onChange({
      label: newLabelList,
      value: valueList
    });
    setModalFlag(false);
  };

  var listClick = function listClick(val) {
    // 选中数据的时候刷新列表
    setDataList(_toConsumableArray(dataList).map(function (item) {
      var newItem = item;
      if (item.value === val.value) newItem.flag = true;else newItem.flag = false;
      return newItem;
    }));
    var newList = JSON.parse(JSON.stringify(labelList));
    var newValueList = JSON.parse(JSON.stringify(valueList)); // 设置当前层级

    newList.splice(newList.length - 1, 1, val.label);
    var insLevel = nowLevel;
    if (nowLevel !== level) insLevel += 1;
    setNowLevel(insLevel); // 如果层级符合，将数据放入input 中，并且关闭弹框

    var newLabelList = JSON.parse(JSON.stringify(newList));

    if (insLevel === level) {
      if (insLevel !== level) newLabelList.pop();
      setInputLabel(newLabelList.join(','));
      if (onChange) onChange({
        label: newLabelList,
        value: newValueList
      });
      setModalFlag(false);
    }

    if (newValueList.length === insLevel) {
      newValueList.pop();
    }

    newValueList.push(val.value); // 设置头部展示列表和值列表

    setLabelList((0, _utils.resetLabel)(newList, placeholderList));
    setValueList(newValueList); // 调用改变层级的事件给用户

    if (onChangeLevel) onChangeLevel(newValueList);
  };

  var labelClick = function labelClick(index) {
    // 设置当前的层级
    setNowLevel(index);
    var newLabelList = labelList.splice(0, index);
    var newValueList = valueList.splice(0, index); // 设置头部展示列表

    setLabelList((0, _utils.resetLabel)(JSON.parse(JSON.stringify(newLabelList)), placeholderList));
    setValueList(newValueList); // 调用改变层级的事件给用户

    if (onChangeLevel) onChangeLevel(newValueList);
  };

  var listReverse = []; // eslint-disable-next-line no-plusplus

  for (var i = labelList.length; i < 4; i++) {
    listReverse.push(Math.random().toString(36).substring(7));
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_.InputItem, {
    isVertical: isVertical,
    value: inputLabel,
    placeholder: placeholder,
    readOnly: true,
    coverStyle: coverStyle,
    labelNumber: labelNumber,
    onClick: function onClick() {
      if (_onClick) _onClick();
      openMoal();
    },
    onChange: function onChange(e) {
      setInputLabel(e.target.value);
    }
  }, required && hasStar && /*#__PURE__*/_react.default.createElement("span", {
    className: "alitajs-dform-redStar"
  }, "*"), /*#__PURE__*/_react.default.createElement("span", {
    id: fieldProps,
    className: "alitajs-dform-title"
  }, title)), /*#__PURE__*/_react.default.createElement(_modal.default, {
    popup: true,
    visible: modalFlag,
    onClose: function onClose() {
      onCancel();
    },
    className: "alitajs-dform-address",
    animationType: "slide-up",
    title: /*#__PURE__*/_react.default.createElement("div", {
      className: "am-picker-popup-header"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "am-picker-popup-item am-picker-popup-header-left",
      onClick: function onClick() {
        onCancel();
      }
    }, "\u53D6\u6D88"), /*#__PURE__*/_react.default.createElement("div", {
      className: "am-picker-popup-item am-picker-popup-title"
    }, title), /*#__PURE__*/_react.default.createElement("div", {
      className: "am-picker-popup-item am-picker-popup-header-right",
      onClick: function onClick() {
        onConfirm();
      }
    }, "\u786E\u5B9A"))
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "alitajs-dform-address-content"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "alitajs-dform-address-value"
  }, /*#__PURE__*/_react.default.createElement(_flex.default, {
    align: "start"
  }, _toConsumableArray(labelList).map(function (label, index) {
    return /*#__PURE__*/_react.default.createElement(_flex.default.Item, {
      key: label,
      className: (0, _classnames.default)({
        'alitajs-dform-address-value-item': true
      }),
      onClick: function onClick() {
        labelClick(index);
      }
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)({
        'alitajs-dform-address-value-item-label': true,
        'alitajs-dform-address-value-select': index + 1 === labelList.length
      })
    }, label));
  }), listReverse.map(function (val) {
    return /*#__PURE__*/_react.default.createElement(_flex.default.Item, {
      key: val
    });
  }))), /*#__PURE__*/_react.default.createElement("div", {
    className: "alitajs-dform-address-list"
  }, /*#__PURE__*/_react.default.createElement(_list.default, null, _toConsumableArray(dataList).map(function (item) {
    return /*#__PURE__*/_react.default.createElement(Item, {
      key: item.value
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "alitajs-dform-address-list-content",
      onClick: function onClick() {
        listClick(item);
      }
    }, /*#__PURE__*/_react.default.createElement("div", null, item.label), item.flag && /*#__PURE__*/_react.default.createElement("div", {
      className: "alitajs-dform-tick"
    })));
  }))))));
};

var _default = AddressPickerGroup;
exports.default = _default;