"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd-mobile/es/date-picker/style");

var _datePicker = _interopRequireDefault(require("antd-mobile/es/date-picker"));

require("antd-mobile/es/list/style");

var _list = _interopRequireDefault(require("antd-mobile/es/list"));

var _react = _interopRequireDefault(require("react"));

var _Field = _interopRequireDefault(require("../Field"));

var _utils = require("../../utils");

require("../../styles/index.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var NomarDatePicker = function NomarDatePicker(props) {
  var fieldProps = props.fieldProps,
      _props$required = props.required,
      required = _props$required === void 0 ? false : _props$required,
      title = props.title,
      rules = props.rules,
      _props$modeType = props.modeType,
      modeType = _props$modeType === void 0 ? 'date' : _props$modeType,
      _props$positionType = props.positionType,
      positionType = _props$positionType === void 0 ? 'horizontal' : _props$positionType,
      _props$hasStar = props.hasStar,
      hasStar = _props$hasStar === void 0 ? true : _props$hasStar,
      subTitle = props.subTitle,
      _props$hidden = props.hidden,
      hidden = _props$hidden === void 0 ? false : _props$hidden,
      otherProps = _objectWithoutProperties(props, ["fieldProps", "required", "title", "rules", "modeType", "positionType", "hasStar", "subTitle", "hidden"]);

  var isVertical = positionType === 'vertical';
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, !hidden && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, isVertical && /*#__PURE__*/_react.default.createElement("div", {
    className: "alitajs-dform-vertical-title"
  }, required && hasStar && /*#__PURE__*/_react.default.createElement("span", {
    className: "alitajs-dform-redStar"
  }, "*"), /*#__PURE__*/_react.default.createElement("span", {
    id: fieldProps,
    className: "alitajs-dform-title"
  }, title), subTitle), /*#__PURE__*/_react.default.createElement("div", {
    className: "alitajs-dform".concat(isVertical ? '-vertical' : '', "-date-picker")
  }, /*#__PURE__*/_react.default.createElement(_Field.default, {
    name: fieldProps,
    rules: rules || [{
      required: required,
      message: "\u8BF7\u9009\u62E9".concat(title)
    }]
  }, /*#__PURE__*/_react.default.createElement(_datePicker.default, _extends({}, otherProps, {
    mode: modeType,
    title: title,
    format: function format(value) {
      return (0, _utils.changeDateFormat)(value, modeType);
    }
  }), /*#__PURE__*/_react.default.createElement(_list.default.Item, {
    arrow: "horizontal"
  }, required && hasStar && /*#__PURE__*/_react.default.createElement("span", {
    className: "alitajs-dform-redStar"
  }, "*"), /*#__PURE__*/_react.default.createElement("span", {
    id: fieldProps,
    className: "alitajs-dform-title"
  }, title)))))));
};

var _default = NomarDatePicker;
exports.default = _default;