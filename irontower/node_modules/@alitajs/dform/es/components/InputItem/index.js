function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import classnames from 'classnames';
import '../../styles/index.less';

var InputItem = function InputItem(props) {
  var _props$isVertical = props.isVertical,
      isVertical = _props$isVertical === void 0 ? false : _props$isVertical,
      _props$value = props.value,
      value = _props$value === void 0 ? '' : _props$value,
      _props$placeholder = props.placeholder,
      placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,
      onClick = props.onClick,
      _props$readOnly = props.readOnly,
      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,
      onChange = props.onChange,
      _props$labelNumber = props.labelNumber,
      labelNumber = _props$labelNumber === void 0 ? 5 : _props$labelNumber,
      _props$coverStyle = props.coverStyle,
      coverStyle = _props$coverStyle === void 0 ? {} : _props$coverStyle;
  var labelCls = classnames('am-input-label', 'alitajs-dform-input-tltle', {
    'am-input-label-2': labelNumber === 2,
    'am-input-label-3': labelNumber === 3,
    'am-input-label-4': labelNumber === 4,
    'am-input-label-5': labelNumber === 5,
    'am-input-label-6': labelNumber === 6,
    'am-input-label-7': labelNumber === 7
  });

  var inputItemClick = function inputItemClick() {
    if (onClick) onClick();
  };

  var inputItemChange = function inputItemChange(e) {
    if (onChange) onChange(e);
  };

  return /*#__PURE__*/React.createElement("div", {
    className: "am-list-item am-list-item-middle alitajs-dform-input-item"
  }, /*#__PURE__*/React.createElement("div", {
    className: "am-list-line"
  }, !isVertical && /*#__PURE__*/React.createElement("div", {
    className: labelCls
  }, props.children), /*#__PURE__*/React.createElement("div", {
    className: "alitajs-dform-input-value",
    style: {
      // width: isVertical ? '100%' : '60%',
      flex: '1'
    },
    onClick: function onClick() {
      inputItemClick();
    }
  }, /*#__PURE__*/React.createElement("input", {
    type: "text",
    value: value,
    readOnly: readOnly,
    style: _objectSpread({
      textAlign: isVertical ? 'left' : 'right'
    }, coverStyle),
    onChange: function onChange(e) {
      inputItemChange(e);
    },
    className: "alitajs-dform-input-text",
    placeholder: placeholder
  }), /*#__PURE__*/React.createElement("img", {
    className: "alitajs-dform-right",
    src: "data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2216%22%20height%3D%2226%22%20viewBox%3D%220%200%2016%2026%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%3Cg%20id%3D%22UI-KIT_%E5%9F%BA%E7%A1%80%E5%85%83%E4%BB%B6%22%20stroke%3D%22none%22%20stroke-width%3D%221%22%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cg%20id%3D%229.9%E5%9F%BA%E7%A1%80%E5%85%83%E4%BB%B6%22%20transform%3D%22translate(-5809.000000%2C%20-8482.000000)%22%20fill%3D%22%23C7C7CC%22%3E%3Cpolygon%20id%3D%22Disclosure-Indicator%22%20points%3D%225811%208482%205809%208484%205820.5%208495%205809%208506%205811%208508%205825%208495%22%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E",
    alt: ""
  }))));
};

export default InputItem;