import "antd-mobile/es/button/style";
import _Button from "antd-mobile/es/button";
import "antd-mobile/es/white-space/style";
import _WhiteSpace from "antd-mobile/es/white-space";

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * title: 基础 多选框
 * desc: 表单使用 demo
 */
import React from 'react';
import DynamicForm, { useForm } from '@alitajs/dform';
var fruitsList = [{
  label: '苹果',
  value: '苹果'
}, {
  label: '香蕉',
  value: '香蕉'
}, {
  label: '橙子',
  value: '橙子'
}, {
  label: '西瓜',
  value: '西瓜'
}, {
  label: '哈密瓜',
  value: '哈密瓜'
}, {
  label: '菠萝',
  value: '菠萝'
}, {
  label: '香梨',
  value: '香梨'
}];

var Page = function Page() {
  var _useForm = useForm(),
      _useForm2 = _slicedToArray(_useForm, 1),
      form = _useForm2[0];

  var onFinish = function onFinish(values) {
    // eslint-disable-next-line no-console
    console.log('Success:', values);
  };

  var onFinishFailed = function onFinishFailed(errorInfo) {
    // eslint-disable-next-line no-console
    console.log('Failed:', errorInfo);
  };

  var formsData = [{
    type: 'checkbox',
    title: '喜欢的水果',
    required: true,
    data: fruitsList,
    fieldProps: 'fruit'
  }];
  var formsValues = {
    fruit: ['西瓜', '橙子']
  };
  var formProps = {
    form: form,
    onFinish: onFinish,
    onFinishFailed: onFinishFailed,
    data: formsData,
    formsValues: formsValues,
    isDev: true
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DynamicForm, formProps), /*#__PURE__*/React.createElement(_WhiteSpace, {
    size: "sm"
  }), /*#__PURE__*/React.createElement(_Button, {
    type: "primary",
    onClick: function onClick() {
      form.submit();
    }
  }, "Submit"));
};

export default Page;