"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _path() {
  const data = require("path");

  _path = function _path() {
    return data;
  };

  return data;
}

function _assert() {
  const data = _interopRequireDefault(require("assert"));

  _assert = function _assert() {
    return data;
  };

  return data;
}

function _utils() {
  const data = require("@umijs/utils");

  _utils = function _utils() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _default({
  api
}) {
  var _temp;

  return _temp = class PageGenerator extends _utils().Generator {
    constructor({
      cwd,
      args
    }) {
      super({
        cwd,
        args
      });
      this.appName = void 0;

      if (args._ && args._[0]) {
        this.appName = args._[0] || '';
      }

      (0, _assert().default)(this.appName, '文件名必须提供，你可以使用 yarn create alita appName'); // else {
      //   const pathsName = winPath(this.cwd).split('/');
      //   this.appName = pathsName[pathsName.length - 1];
      // }
    }

    writing() {
      var _this = this;

      return _asyncToGenerator(function* () {
        let dirPath = '../../templates/app/templates';

        if (_this.args.pc) {
          dirPath = '../../templates/app/templates-pc';
        }

        _this.copyDirectory({
          context: {
            appType: 'h5',
            projectName: _this.appName,
            isTypeScript: true
          },
          path: (0, _path().join)(__dirname, dirPath),
          target: (0, _path().join)(_this.cwd, _this.appName)
        });
      })();
    }

  }, _temp;
}